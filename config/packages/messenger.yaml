framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed
        transports:
          async_priority_high:
            dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
              # default configuration
            retry_strategy:
              max_retries: 3
                # milliseconds delay
              delay: 1000
                # causes the delay to be higher before each retry
                # e.g. 1 second delay, 2 seconds, 4 seconds
              multiplier: 2
              max_delay: 0
                # override all of this with a service that
                # implements Symfony\Component\Messenger\Retry\RetryStrategyInterface
                # service: null
            options:
              # queue_name is specific to the doctrine transport
              queue_name: high

              # for AMQP send to a separate exchange then queue
              #exchange:
              #    name: high
              #queues:
              #    messages_high: ~
              # or redis try "group"
          async_priority_low:
            dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
            options:
              queue_name: low

        routing:
          'App\Message\SmsNotification': async_priority_low
          'App\Message\NewUserWelcomeEmail': async_priority_high
#        transports:
#            # https://symfony.com/doc/current/messenger.html#transport-configuration
#             async: '%env(MESSENGER_TRANSPORT_DSN)%'
#            # failed: 'doctrine://default?queue_name=failed'
#             sync: 'sync://'
#
#        routing:
#            # Route your messages to the transports
#            # 'App\Message\YourMessage': async#
#            App\Message\SmsNotification: async

            # route all messages that extend this example base class or interface
#            'App\Message\AbstractAsyncMessage': async
#            'App\Message\AsyncMessageInterface': async
#
#            'My\Message\ToBeSentToTwoSenders': [ async, audit ]

